'use strict';

var userDialog = document.querySelector('.setup');
userDialog.classList.remove('hidden');

var wizardData = new Array(4);

var dataToBeAssigned = ['name', 'coatColor', 'eyesColor'];

var randomData = {
  firstNames: ['Иван', 'Хуан Себастьян', 'Мария', 'Кристоф', 'Виктор', 'Юлия', 'Люпита', 'Вашингтон'],
  lastNames: ['да Марья', 'Верон', 'Мирабелла', 'Вальц', 'Онопко', 'Топольницкая', 'Нионго', 'Ирвинг'],
  colorsOfCoat: ['rgb (101, 137, 164)', 'rgb (241, 43, 107)', 'rgb (146, 100, 161)', 'rgb (56, 159, 117)', 'rgb (215, 210, 55)', 'rgb (0, 0, 0)'],
  colorsOfEyes: ['black', 'red', 'blue', 'yellow', 'green']
};

var getFullName = function (random) { // the function creates and a returns a variable of a random combination of first and last names
  var keys = Object.keys(random);
  var fullName = random[keys[0]][Math.floor(Math.random() * random[keys[0]].length)];
  fullName += ' ' + random[keys[1]][Math.floor(Math.random() * random[keys[1]].length)];
  return fullName;
};

var getObjectField = function (toBeAssigned, random) { // the function creates object with randomly assigned data from the objetc obove using the array elements as keys
  var keys = Object.keys(random);
  var obj = {};
  for (var i = 0; i < toBeAssigned.length; i++) {
    if (i === 0) {
      obj[toBeAssigned[i]] = getFullName(random);
    } else {
      obj[toBeAssigned[i]] = random[keys[i + 1]][Math.floor(Math.random() * (random[keys[i + 1]].length))];
    }
  }
  return obj;
};

var getWizard = function (data) { // the function creates an array with objects generated by the previous function
  for (var i = 0; i < data.length; i++) {
    data[i] = getObjectField(dataToBeAssigned, randomData);
  }
  return data;
};

getWizard(wizardData);

var similarWizardTemplate = document.querySelector('#similar-wizard-template').content.querySelector('.setup-similar-item');

var renderWizard = function (wizard) {
  var wizardElement = similarWizardTemplate.cloneNode(true);

  wizardElement.querySelector('.setup-similar-label').textContent = wizard.name;
  wizardElement.querySelector('.wizard-coat').style.fill = wizard.coatColor;
  wizardElement.querySelector('.wizard-eyes').style.fill = wizard.eyesColor;

  return wizardElement;
};

var fragment = document.createDocumentFragment();

for (var i = 0; i < wizardData.length; i++) {
  fragment.appendChild(renderWizard(wizardData[i]));
}

var similarListElement = userDialog.querySelector('.setup-similar-list');

similarListElement.appendChild(fragment);


userDialog.querySelector('.setup-similar').classList.remove('hidden');
